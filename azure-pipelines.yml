trigger:
- '*'

# Top level variables, applies to every stage in the pipeline
variables:
  buildConfiguration: 'Release'

# Defines each stage of the pipeline, firstly with 'Build'
stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop
# Second stage - deploy web app to Azure App Service (configured in Azure portal - resource groups tools etc), need to have subscription setup in AZDO project settings (service connections > Azure Resource manager)
- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build # Only run if Build succeeds
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev # Defines an AZDO environment (non gui and version controlled way) to describe where artifact will be deployed
    variables: # Select variable group from AZDO (under Library) to use in the deployment
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps: # Download auto fetches latest artifact from AZDO and downloads the zip artifact (the below comment can be used to specify a version)
          - download: current # Shortcut for DownloadPipelineArtifact@2 -> inputs: -> buildType: current, artifact: 'drop'
            artifact: drop
          - task: AzureWebApp@1 # deploy the contents of MyPackage.zip to an App Service instance named MyWebApp
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              appName: '$(WebAppNameDev)' # Fetched from pipeline variables to refer to the webapp name in Azure
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'